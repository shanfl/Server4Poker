// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Client.proto
// Protobuf C++ Version: 5.26.0

#include "Client.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/io/zero_copy_stream_impl_lite.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace Ps {

inline constexpr PlayerLoginRes::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        playerid_{::uint64_t{0u}},
        result_{0},
        sex_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PlayerLoginRes::PlayerLoginRes(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PlayerLoginResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlayerLoginResDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlayerLoginResDefaultTypeInternal() {}
  union {
    PlayerLoginRes _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlayerLoginResDefaultTypeInternal _PlayerLoginRes_default_instance_;

inline constexpr PlayerLoginReq::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        pass_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        app_spec_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        keys_enc_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        osplatform_{static_cast< ::Ps::OS_PLATFORM >(0)},
        las_{static_cast< ::Ps::LoginAppSdk >(0)},
        id_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PlayerLoginReq::PlayerLoginReq(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PlayerLoginReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlayerLoginReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlayerLoginReqDefaultTypeInternal() {}
  union {
    PlayerLoginReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlayerLoginReqDefaultTypeInternal _PlayerLoginReq_default_instance_;
}  // namespace Ps
namespace Ps {
PROTOBUF_CONSTINIT const uint32_t MsgId_internal_data_[] = {
    65536u, 131072u, 1001u, 1000u, };
bool MsgId_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, MsgId_internal_data_);
}
static ::google::protobuf::internal::ExplicitlyConstructed<std::string>
    MsgId_strings[3] = {};

static const char MsgId_names[] = {
    "ID_PlayerLoginReq"
    "ID_PlayerLoginRes"
    "id0"
};

static const ::google::protobuf::internal::EnumEntry MsgId_entries[] =
    {
        {{&MsgId_names[0], 17}, 1000},
        {{&MsgId_names[17], 17}, 1001},
        {{&MsgId_names[34], 3}, 0},
};

static const int MsgId_entries_by_number[] = {
    2,  // 0 -> id0
    0,  // 1000 -> ID_PlayerLoginReq
    1,  // 1001 -> ID_PlayerLoginRes
};

const std::string& MsgId_Name(MsgId value) {
  static const bool kDummy =
      ::google::protobuf::internal::InitializeEnumStrings(
          MsgId_entries, MsgId_entries_by_number,
          3, MsgId_strings);
  (void)kDummy;

  int idx = ::google::protobuf::internal::LookUpEnumName(
      MsgId_entries, MsgId_entries_by_number, 3,
      value);
  return idx == -1 ? ::google::protobuf::internal::GetEmptyString()
                   : MsgId_strings[idx].get();
}

bool MsgId_Parse(absl::string_view name, MsgId* value) {
  int int_value;
  bool success = ::google::protobuf::internal::LookUpEnumValue(
      MsgId_entries, 3, name, &int_value);
  if (success) {
    *value = static_cast<MsgId>(int_value);
  }
  return success;
}
PROTOBUF_CONSTINIT const uint32_t OS_PLATFORM_internal_data_[] = {
    262144u, 0u, };
bool OS_PLATFORM_IsValid(int value) {
  return 0 <= value && value <= 3;
}
static ::google::protobuf::internal::ExplicitlyConstructed<std::string>
    OS_PLATFORM_strings[4] = {};

static const char OS_PLATFORM_names[] = {
    "OS_ANDROID"
    "OS_DESKTOP"
    "OS_IOS"
    "OS_UNKNOWN"
};

static const ::google::protobuf::internal::EnumEntry OS_PLATFORM_entries[] =
    {
        {{&OS_PLATFORM_names[0], 10}, 2},
        {{&OS_PLATFORM_names[10], 10}, 1},
        {{&OS_PLATFORM_names[20], 6}, 3},
        {{&OS_PLATFORM_names[26], 10}, 0},
};

static const int OS_PLATFORM_entries_by_number[] = {
    3,  // 0 -> OS_UNKNOWN
    1,  // 1 -> OS_DESKTOP
    0,  // 2 -> OS_ANDROID
    2,  // 3 -> OS_IOS
};

const std::string& OS_PLATFORM_Name(OS_PLATFORM value) {
  static const bool kDummy =
      ::google::protobuf::internal::InitializeEnumStrings(
          OS_PLATFORM_entries, OS_PLATFORM_entries_by_number,
          4, OS_PLATFORM_strings);
  (void)kDummy;

  int idx = ::google::protobuf::internal::LookUpEnumName(
      OS_PLATFORM_entries, OS_PLATFORM_entries_by_number, 4,
      value);
  return idx == -1 ? ::google::protobuf::internal::GetEmptyString()
                   : OS_PLATFORM_strings[idx].get();
}

bool OS_PLATFORM_Parse(absl::string_view name, OS_PLATFORM* value) {
  int int_value;
  bool success = ::google::protobuf::internal::LookUpEnumValue(
      OS_PLATFORM_entries, 4, name, &int_value);
  if (success) {
    *value = static_cast<OS_PLATFORM>(int_value);
  }
  return success;
}
PROTOBUF_CONSTINIT const uint32_t LoginAppSdk_internal_data_[] = {
    131072u, 32u, 14u, };
bool LoginAppSdk_IsValid(int value) {
  return 0 <= value && value <= 5 && ((59u >> value) & 1) != 0;
}
static ::google::protobuf::internal::ExplicitlyConstructed<std::string>
    LoginAppSdk_strings[5] = {};

static const char LoginAppSdk_names[] = {
    "GUEST"
    "KEY_ENC"
    "NAMEPASSWORD"
    "UNKNOWN_LAS"
    "WECHAT"
};

static const ::google::protobuf::internal::EnumEntry LoginAppSdk_entries[] =
    {
        {{&LoginAppSdk_names[0], 5}, 3},
        {{&LoginAppSdk_names[5], 7}, 5},
        {{&LoginAppSdk_names[12], 12}, 1},
        {{&LoginAppSdk_names[24], 11}, 0},
        {{&LoginAppSdk_names[35], 6}, 4},
};

static const int LoginAppSdk_entries_by_number[] = {
    3,  // 0 -> UNKNOWN_LAS
    2,  // 1 -> NAMEPASSWORD
    0,  // 3 -> GUEST
    4,  // 4 -> WECHAT
    1,  // 5 -> KEY_ENC
};

const std::string& LoginAppSdk_Name(LoginAppSdk value) {
  static const bool kDummy =
      ::google::protobuf::internal::InitializeEnumStrings(
          LoginAppSdk_entries, LoginAppSdk_entries_by_number,
          5, LoginAppSdk_strings);
  (void)kDummy;

  int idx = ::google::protobuf::internal::LookUpEnumName(
      LoginAppSdk_entries, LoginAppSdk_entries_by_number, 5,
      value);
  return idx == -1 ? ::google::protobuf::internal::GetEmptyString()
                   : LoginAppSdk_strings[idx].get();
}

bool LoginAppSdk_Parse(absl::string_view name, LoginAppSdk* value) {
  int int_value;
  bool success = ::google::protobuf::internal::LookUpEnumValue(
      LoginAppSdk_entries, 5, name, &int_value);
  if (success) {
    *value = static_cast<LoginAppSdk>(int_value);
  }
  return success;
}
// ===================================================================

class PlayerLoginReq::_Internal {
 public:
};

PlayerLoginReq::PlayerLoginReq(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Ps.PlayerLoginReq)
}
inline PROTOBUF_NDEBUG_INLINE PlayerLoginReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : name_(arena, from.name_),
        pass_(arena, from.pass_),
        app_spec_(arena, from.app_spec_),
        keys_enc_(arena, from.keys_enc_),
        _cached_size_{0} {}

PlayerLoginReq::PlayerLoginReq(
    ::google::protobuf::Arena* arena,
    const PlayerLoginReq& from)
    : ::google::protobuf::MessageLite(arena) {
  PlayerLoginReq* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, osplatform_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, osplatform_),
           offsetof(Impl_, id_) -
               offsetof(Impl_, osplatform_) +
               sizeof(Impl_::id_));

  // @@protoc_insertion_point(copy_constructor:Ps.PlayerLoginReq)
}
inline PROTOBUF_NDEBUG_INLINE PlayerLoginReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        pass_(arena),
        app_spec_(arena),
        keys_enc_(arena),
        _cached_size_{0} {}

inline void PlayerLoginReq::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, osplatform_),
           0,
           offsetof(Impl_, id_) -
               offsetof(Impl_, osplatform_) +
               sizeof(Impl_::id_));
}
PlayerLoginReq::~PlayerLoginReq() {
  // @@protoc_insertion_point(destructor:Ps.PlayerLoginReq)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void PlayerLoginReq::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.pass_.Destroy();
  _impl_.app_spec_.Destroy();
  _impl_.keys_enc_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
PlayerLoginReq::GetClassData() const {
  struct ClassData_ {
    ::google::protobuf::MessageLite::ClassData header;
    char type_name[18];
  };

  PROTOBUF_CONSTINIT static const ClassData_ _data_ = {
      {
          nullptr,  // OnDemandRegisterArenaDtor
          PROTOBUF_FIELD_OFFSET(PlayerLoginReq, _impl_._cached_size_),
          true,
      },
      "Ps.PlayerLoginReq",
  };

  return &_data_.header;
}
PROTOBUF_NOINLINE void PlayerLoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:Ps.PlayerLoginReq)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.pass_.ClearToEmpty();
  _impl_.app_spec_.ClearToEmpty();
  _impl_.keys_enc_.ClearToEmpty();
  ::memset(&_impl_.osplatform_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.id_) -
      reinterpret_cast<char*>(&_impl_.osplatform_)) + sizeof(_impl_.id_));
  _internal_metadata_.Clear<std::string>();
}

const char* PlayerLoginReq::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 50, 2> PlayerLoginReq::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PlayerLoginReq_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Ps::PlayerLoginReq>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .Ps.OS_PLATFORM osplatform = 1;
    {::_pbi::TcParser::FastV32S1,
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerLoginReq, _impl_.osplatform_)}},
    // .Ps.LoginAppSdk las = 2;
    {::_pbi::TcParser::FastV32S1,
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerLoginReq, _impl_.las_)}},
    // int64 id = 3;
    {::_pbi::TcParser::FastV64S1,
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerLoginReq, _impl_.id_)}},
    // string name = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerLoginReq, _impl_.name_)}},
    // string pass = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerLoginReq, _impl_.pass_)}},
    // string app_spec = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerLoginReq, _impl_.app_spec_)}},
    // string keys_enc = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerLoginReq, _impl_.keys_enc_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .Ps.OS_PLATFORM osplatform = 1;
    {PROTOBUF_FIELD_OFFSET(PlayerLoginReq, _impl_.osplatform_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .Ps.LoginAppSdk las = 2;
    {PROTOBUF_FIELD_OFFSET(PlayerLoginReq, _impl_.las_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // int64 id = 3;
    {PROTOBUF_FIELD_OFFSET(PlayerLoginReq, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string name = 4;
    {PROTOBUF_FIELD_OFFSET(PlayerLoginReq, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string pass = 5;
    {PROTOBUF_FIELD_OFFSET(PlayerLoginReq, _impl_.pass_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string app_spec = 6;
    {PROTOBUF_FIELD_OFFSET(PlayerLoginReq, _impl_.app_spec_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string keys_enc = 7;
    {PROTOBUF_FIELD_OFFSET(PlayerLoginReq, _impl_.keys_enc_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\21\0\0\0\4\4\10\10"
    "Ps.PlayerLoginReq"
    "name"
    "pass"
    "app_spec"
    "keys_enc"
  }},
};

::uint8_t* PlayerLoginReq::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Ps.PlayerLoginReq)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .Ps.OS_PLATFORM osplatform = 1;
  if (this->_internal_osplatform() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_osplatform(), target);
  }

  // .Ps.LoginAppSdk las = 2;
  if (this->_internal_las() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_las(), target);
  }

  // int64 id = 3;
  if (this->_internal_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<3>(
            stream, this->_internal_id(), target);
  }

  // string name = 4;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Ps.PlayerLoginReq.name");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string pass = 5;
  if (!this->_internal_pass().empty()) {
    const std::string& _s = this->_internal_pass();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Ps.PlayerLoginReq.pass");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // string app_spec = 6;
  if (!this->_internal_app_spec().empty()) {
    const std::string& _s = this->_internal_app_spec();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Ps.PlayerLoginReq.app_spec");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // string keys_enc = 7;
  if (!this->_internal_keys_enc().empty()) {
    const std::string& _s = this->_internal_keys_enc();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Ps.PlayerLoginReq.keys_enc");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Ps.PlayerLoginReq)
  return target;
}

::size_t PlayerLoginReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Ps.PlayerLoginReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 4;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string pass = 5;
  if (!this->_internal_pass().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_pass());
  }

  // string app_spec = 6;
  if (!this->_internal_app_spec().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_app_spec());
  }

  // string keys_enc = 7;
  if (!this->_internal_keys_enc().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_keys_enc());
  }

  // .Ps.OS_PLATFORM osplatform = 1;
  if (this->_internal_osplatform() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_osplatform());
  }

  // .Ps.LoginAppSdk las = 2;
  if (this->_internal_las() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_las());
  }

  // int64 id = 3;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void PlayerLoginReq::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const PlayerLoginReq*>(
      &from));
}

void PlayerLoginReq::MergeFrom(const PlayerLoginReq& from) {
  PlayerLoginReq* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:Ps.PlayerLoginReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_pass().empty()) {
    _this->_internal_set_pass(from._internal_pass());
  }
  if (!from._internal_app_spec().empty()) {
    _this->_internal_set_app_spec(from._internal_app_spec());
  }
  if (!from._internal_keys_enc().empty()) {
    _this->_internal_set_keys_enc(from._internal_keys_enc());
  }
  if (from._internal_osplatform() != 0) {
    _this->_impl_.osplatform_ = from._impl_.osplatform_;
  }
  if (from._internal_las() != 0) {
    _this->_impl_.las_ = from._impl_.las_;
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void PlayerLoginReq::CopyFrom(const PlayerLoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Ps.PlayerLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PlayerLoginReq::IsInitialized() const {
  return true;
}

void PlayerLoginReq::InternalSwap(PlayerLoginReq* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.pass_, &other->_impl_.pass_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.app_spec_, &other->_impl_.app_spec_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.keys_enc_, &other->_impl_.keys_enc_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PlayerLoginReq, _impl_.id_)
      + sizeof(PlayerLoginReq::_impl_.id_)
      - PROTOBUF_FIELD_OFFSET(PlayerLoginReq, _impl_.osplatform_)>(
          reinterpret_cast<char*>(&_impl_.osplatform_),
          reinterpret_cast<char*>(&other->_impl_.osplatform_));
}

// ===================================================================

class PlayerLoginRes::_Internal {
 public:
};

PlayerLoginRes::PlayerLoginRes(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Ps.PlayerLoginRes)
}
inline PROTOBUF_NDEBUG_INLINE PlayerLoginRes::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : key_(arena, from.key_),
        name_(arena, from.name_),
        _cached_size_{0} {}

PlayerLoginRes::PlayerLoginRes(
    ::google::protobuf::Arena* arena,
    const PlayerLoginRes& from)
    : ::google::protobuf::MessageLite(arena) {
  PlayerLoginRes* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, playerid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, playerid_),
           offsetof(Impl_, sex_) -
               offsetof(Impl_, playerid_) +
               sizeof(Impl_::sex_));

  // @@protoc_insertion_point(copy_constructor:Ps.PlayerLoginRes)
}
inline PROTOBUF_NDEBUG_INLINE PlayerLoginRes::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : key_(arena),
        name_(arena),
        _cached_size_{0} {}

inline void PlayerLoginRes::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, playerid_),
           0,
           offsetof(Impl_, sex_) -
               offsetof(Impl_, playerid_) +
               sizeof(Impl_::sex_));
}
PlayerLoginRes::~PlayerLoginRes() {
  // @@protoc_insertion_point(destructor:Ps.PlayerLoginRes)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void PlayerLoginRes::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.key_.Destroy();
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
PlayerLoginRes::GetClassData() const {
  struct ClassData_ {
    ::google::protobuf::MessageLite::ClassData header;
    char type_name[18];
  };

  PROTOBUF_CONSTINIT static const ClassData_ _data_ = {
      {
          nullptr,  // OnDemandRegisterArenaDtor
          PROTOBUF_FIELD_OFFSET(PlayerLoginRes, _impl_._cached_size_),
          true,
      },
      "Ps.PlayerLoginRes",
  };

  return &_data_.header;
}
PROTOBUF_NOINLINE void PlayerLoginRes::Clear() {
// @@protoc_insertion_point(message_clear_start:Ps.PlayerLoginRes)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.key_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  ::memset(&_impl_.playerid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.sex_) -
      reinterpret_cast<char*>(&_impl_.playerid_)) + sizeof(_impl_.sex_));
  _internal_metadata_.Clear<std::string>();
}

const char* PlayerLoginRes::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 33, 2> PlayerLoginRes::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PlayerLoginRes_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Ps::PlayerLoginRes>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 result = 1;
    {::_pbi::TcParser::FastV32S1,
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerLoginRes, _impl_.result_)}},
    // string key = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerLoginRes, _impl_.key_)}},
    // uint64 playerid = 3;
    {::_pbi::TcParser::FastV64S1,
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerLoginRes, _impl_.playerid_)}},
    // string name = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerLoginRes, _impl_.name_)}},
    // int32 sex = 5;
    {::_pbi::TcParser::FastV32S1,
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerLoginRes, _impl_.sex_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 result = 1;
    {PROTOBUF_FIELD_OFFSET(PlayerLoginRes, _impl_.result_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string key = 2;
    {PROTOBUF_FIELD_OFFSET(PlayerLoginRes, _impl_.key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 playerid = 3;
    {PROTOBUF_FIELD_OFFSET(PlayerLoginRes, _impl_.playerid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string name = 4;
    {PROTOBUF_FIELD_OFFSET(PlayerLoginRes, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 sex = 5;
    {PROTOBUF_FIELD_OFFSET(PlayerLoginRes, _impl_.sex_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\21\0\3\0\4\0\0\0"
    "Ps.PlayerLoginRes"
    "key"
    "name"
  }},
};

::uint8_t* PlayerLoginRes::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Ps.PlayerLoginRes)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 result = 1;
  if (this->_internal_result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_result(), target);
  }

  // string key = 2;
  if (!this->_internal_key().empty()) {
    const std::string& _s = this->_internal_key();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Ps.PlayerLoginRes.key");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // uint64 playerid = 3;
  if (this->_internal_playerid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_playerid(), target);
  }

  // string name = 4;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Ps.PlayerLoginRes.name");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // int32 sex = 5;
  if (this->_internal_sex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_sex(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Ps.PlayerLoginRes)
  return target;
}

::size_t PlayerLoginRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Ps.PlayerLoginRes)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string key = 2;
  if (!this->_internal_key().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_key());
  }

  // string name = 4;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // uint64 playerid = 3;
  if (this->_internal_playerid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_playerid());
  }

  // int32 result = 1;
  if (this->_internal_result() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_result());
  }

  // int32 sex = 5;
  if (this->_internal_sex() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_sex());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void PlayerLoginRes::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const PlayerLoginRes*>(
      &from));
}

void PlayerLoginRes::MergeFrom(const PlayerLoginRes& from) {
  PlayerLoginRes* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:Ps.PlayerLoginRes)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_playerid() != 0) {
    _this->_impl_.playerid_ = from._impl_.playerid_;
  }
  if (from._internal_result() != 0) {
    _this->_impl_.result_ = from._impl_.result_;
  }
  if (from._internal_sex() != 0) {
    _this->_impl_.sex_ = from._impl_.sex_;
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void PlayerLoginRes::CopyFrom(const PlayerLoginRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Ps.PlayerLoginRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PlayerLoginRes::IsInitialized() const {
  return true;
}

void PlayerLoginRes::InternalSwap(PlayerLoginRes* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, &other->_impl_.key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PlayerLoginRes, _impl_.sex_)
      + sizeof(PlayerLoginRes::_impl_.sex_)
      - PROTOBUF_FIELD_OFFSET(PlayerLoginRes, _impl_.playerid_)>(
          reinterpret_cast<char*>(&_impl_.playerid_),
          reinterpret_cast<char*>(&other->_impl_.playerid_));
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace Ps
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
